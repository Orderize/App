name: Orderize CI/CD

on:
  push:
    branches:
      - '**'

permissions:
  contents: write

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create local.properties
        run: |
          echo "ORDERIZE_BASE_URL=${{ secrets.ORDERIZE_BASE_URL }}" >> local.properties
          echo "GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}" >> local.properties

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build APK
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            ./gradlew assembleRelease
          else
            ./gradlew assembleDebug
          fi

      - name: Upload APK to GitHub Release
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/development'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}-${{ github.run_number }}
          name: "Build ${{ github.ref_name }} #${{ github.run_number }}"
          body: |
            APK gerado automaticamente para a branch `${{ github.ref_name }}`.
            - Commit: ${{ github.sha }}
          files: |
            ${{ github.workspace }}/app/build/outputs/apk/${{ github.ref_name == 'main' && 'release' || 'debug' }}/*.apk
